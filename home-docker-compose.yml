version: '3'
services:
  mongodb:
    image: mongo:3.6
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
      - "100.97.108.34:27017:27017"
    dns:
      - 100.113.28.117
    volumes:
      - /var/lib/mongodb:/data/db
    command: mongod
      --bind_ip 0.0.0.0
      --storageEngine wiredTiger
      --wiredTigerCacheSizeGB 3
      --auth

  sonic:
    image: valeriansaliou/sonic:v1.4.0
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
      - "100.97.108.34:21491:1491"
    dns:
      - 100.113.28.117
    volumes:
      - /var/lib/sonic:/data
      - /opt/configs/sonic/config.cfg:/etc/sonic.cfg:ro

  mongodb6:
    image: mongo:6.0.3
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
      - "100.97.108.34:27018:27017"
    dns:
      - 100.113.28.117
    volumes:
      - /var/lib/mongodb6:/data/db
    command: mongod
      --bind_ip 0.0.0.0
      --storageEngine wiredTiger
      --wiredTigerCacheSizeGB 3
      --auth

  # clickhouse:
  #   image: "yandex/clickhouse-server:21.10.2.15"
  #   restart: unless-stopped
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "30m"
  #   ports:
  #     - "100.97.108.34:8123:8123"
  #     - "100.97.108.34:9000:9000"
  #     - "100.97.108.34:9004:9004"
  #   dns:
  #     - 8.8.8.8
  #     - 1.1.1.1
  #   volumes:
  #     - /var/lib/clickhouse:/var/lib/clickhouse
  #     - /var/log/clickhouse-server:/var/log/clickhouse-server
  #     - /opt/configs/clickhouse-server:/etc/clickhouse-server

  redis:
    image: "redis:6.2.6"
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
      - "6379:6379"
    dns:
      - 100.113.28.117
    volumes:
      - /var/lib/redis:/data

  # https://github.com/chrislusf/seaweedfs#quick-start
  # seaweedfs:
  #   image: "chrislusf/seaweedfs:3.01"
  #   restart: unless-stopped
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "30m"
  #   ports:
  #     - "8333:8333"
  #   dns:
  #     - 8.8.8.8
  #     - 1.1.1.1
  #   volumes:
  #     - /var/lib/seaweedfs:/data
  #   command: server -s3 -dir=/data

  # graphql:
  #   # image: ppcelery/laisky-blog-graphql:1af13be
  #   image: ppcelery/laisky-blog-graphql:998c09e
  #   restart: unless-stopped
  #   # depends_on:
  #   #   - mongodb
  #   # networks:
  #   #   - VPC
  #   dns:
  #     - 100.113.28.117
  #   ports:
  #     - 100.97.108.34:17800:8080
  #   volumes:
  #     - /opt/configs/laisky-blog-graphql:/etc/laisky-blog-graphql:ro
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #   environment:
  #     GOOGLE_APPLICATION_CREDENTIALS: "/etc/laisky-blog-graphql/gcp-general-sa.json"
  #     NO_PROXY: localhost,127.0.0.1,100.64.0.0/10,192.168.0.0/16,10.0.0.0/8,127.0.0.0/8,snake-carp.ts.net
  #     HTTP_PROXY: http://100.97.108.34:17777
  #     HTTPS_PROXY: http://100.97.108.34:17777
  #   command: api --listen=0.0.0.0:8080
  #     --config=/etc/laisky-blog-graphql/settings.yml
  #     --log-level=debug
  #     # -t telegram

  go-ramjet:
    image: ppcelery/go-ramjet:latest
    restart: "always"
    dns:
      - 100.113.28.117
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    environment:
      - TASKS=heartbeat,ssl-monitor,rss,keyword
    volumes:
      - /opt/configs/go-ramjet/settings.yml:/etc/go-ramjet/settings.yml:ro

  ramjet:
    image: ppcelery/ramjet:latest
    restart: always
    deploy:
      replicas: 1
    ports:
      - 100.97.108.34:22280:37851
    dns:
      - 100.122.41.16
    logging:
      driver: "json-file"
      options:
        max-size: "30m"
    volumes:
      - /opt/configs/ramjet/prd.py:/app/ramjet/settings/prd.py:ro
      # - /home/laisky/data/langchain/index:/var/lib/openai/index
      - /home/laisky/data/langchain/index-azure:/var/lib/openai/index
    environment:
      - http_proxy=http://100.122.41.16:17777
      - https_proxy=http://100.122.41.16:17777
      - HTTP_PROXY=http://100.122.41.16:17777
      - HTTPS_PROXY=http://100.122.41.16:17777
      - NO_PROXY=localhost,127.0.0.1,100.64.0.0/10,192.168.0.0/16,10.0.0.0/8,127.0.0.0/8,snake-carp.ts.net,basebit.me
    command: python -m ramjet -t gptchat --debug

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
    logging:
      driver: "json-file"
      options:
        max-size: "30m"
    dns:
      - 100.122.41.16
    ports:
      - 100.97.108.34:9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - http.port=9200
      - http.max_content_length=10MB
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /var/lib/elasticsearch:/usr/share/elasticsearch/data

  # nginx:
  #   image: nginx:1.21.3-alpine
  #   restart: always
  #   ports:
  #     - 100.97.108.34:22280:80
  #   dns:
  #     - 100.122.41.16
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "30m"
  #   volumes:
  #     - /var/log:/var/log
  #     - /opt/configs/nginx/conf.d/home:/etc/nginx/conf.d:ro

  # registry:
  #   image: registry:2
  #   restart: "always"
  #   dns:
  #     - 8.8.8.8
  #     - 1.1.1.1
  #   ports:
  #     - 100.97.108.34:443:443
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #   environment:
  #     - REGISTRY_HTTP_ADDR=0.0.0.0:443
  #     - REGISTRY_HTTP_TLS_CERTIFICATE=/certs/ca.crt
  #     - REGISTRY_HTTP_TLS_KEY=/certs/ca.key
  #   volumes:
  #     - /etc/kubernetes/pki/registry:/certs:ro
  #     - /var/lib/registry

  minio:
    image: minio/minio:latest
    restart: unless-stopped
    env_file:
      - /opt/configs/env/home/minio.env
    ports:
      - 100.97.108.34:19000:9000
      - 100.97.108.34:19001:9001
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    dns:
      - 100.113.28.117
    volumes:
      - /var/lib/minio:/data
    command: server /data --address :9000 --console-address ":9001"

  glider:
    image: ppcelery/glider:latest
    restart: unless-stopped
    dns:
      - 100.113.28.117
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
      - 100.97.108.34:17778:8080
    volumes:
      - /opt/configs/glider/home/glider.conf:/app/glider.conf:ro

  glider-gfw:
    image: ppcelery/glider:latest
    restart: unless-stopped
    dns:
      - 100.113.28.117
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
      - 100.97.108.34:17777:8080
    volumes:
      - /opt/configs/glider/home/glider-gfw.conf:/app/glider.conf:ro

  monitor:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 100.97.108.34:9100:9100

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   restart: unless-stopped
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--web.enable-lifecycle'
  #   ports:
  #     - 100.97.108.34:9090:9090
