version: '3'
services:
  # mongodb:
  #   image: mongo:3.6
  #   restart: unless-stopped
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #   ports:
  #     - "100.97.108.34:27017:27017"
  #   # dns:
  #   #   - 100.122.41.16
  #   volumes:
  #     - /var/lib/mongodb:/data/db
  #   command: mongod
  #     --bind_ip 0.0.0.0
  #     --storageEngine wiredTiger
  #     --wiredTigerCacheSizeGB 3
  #     --auth

  # sonic:
  #   image: valeriansaliou/sonic:v1.4.0
  #   restart: unless-stopped
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #   ports:
  #     - "100.97.108.34:21491:1491"
  #   # dns:
  #   #   - 100.122.41.16
  #   volumes:
  #     - /var/lib/sonic:/data
  #     - /opt/configs/sonic/config.cfg:/etc/sonic.cfg:ro

  # mongodb6:
  #   image: mongo:6.0.16
  #   restart: unless-stopped
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #   ports:
  #     - "100.97.108.34:27018:27017"
  #   # dns:
  #   #   - 100.122.41.16
  #   volumes:
  #     - /var/lib/mongodb6:/data/db
  #   command: mongod
  #     --bind_ip 0.0.0.0
  #     --storageEngine wiredTiger
  #     --wiredTigerCacheSizeGB 3
  #     --auth

  # clickhouse:
  #   image: "yandex/clickhouse-server:21.10.2.15"
  #   restart: unless-stopped
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "30m"
  #   ports:
  #     - "100.97.108.34:8123:8123"
  #     - "100.97.108.34:9000:9000"
  #     - "100.97.108.34:9004:9004"
  #   dns:
  #     - 8.8.8.8
  #     - 1.1.1.1
  #   volumes:
  #     - /var/lib/clickhouse:/var/lib/clickhouse
  #     - /var/log/clickhouse-server:/var/log/clickhouse-server
  #     - /opt/configs/clickhouse-server:/etc/clickhouse-server

  # redis:
  #   image: "redis:6.2.6"
  #   restart: unless-stopped
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #   ports:
  #     - "100.97.108.34:6379:6379"
  #   # dns:
  #   #   - 100.122.41.16
  #   volumes:
  #     - /var/lib/redis:/data

  # liteseed:
  #   image: ppcelery/liteseed-edge:latest
  #   restart: unless-stopped
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #   environment:
  #     http_proxy: http://100.97.189.32:17777
  #     https_proxy: http://100.97.189.32:17777
  #     HTTP_PROXY: http://100.97.189.32:17777
  #     HTTPS_PROXY: http://100.97.189.32:17777
  #     NO_PROXY: localhost,127.0.0.1,100.64.0.0/10,192.168.0.0/16,10.0.0.0/8,127.0.0.0/8,snake-carp.ts.net,basebit.me
  #   ports:
  #     - "100.97.108.34:21108:8080"
  #   volumes:
  #     - /var/lib/liteseed:/data
  #   command: ["start"]

  # https://github.com/chrislusf/seaweedfs#quick-start
  # seaweedfs:
  #   image: "chrislusf/seaweedfs:3.01"
  #   restart: unless-stopped
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "30m"
  #   ports:
  #     - "8333:8333"
  #   dns:
  #     - 8.8.8.8
  #     - 1.1.1.1
  #   volumes:
  #     - /var/lib/seaweedfs:/data
  #   command: server -s3 -dir=/data

  # graphql:
  #   # image: ppcelery/laisky-blog-graphql:1af13be
  #   image: ppcelery/laisky-blog-graphql:998c09e
  #   restart: unless-stopped
  #   # depends_on:
  #   #   - mongodb
  #   # networks:
  #   #   - VPC
  #   dns:
  #     - 100.113.28.117
  #   ports:
  #     - 100.97.108.34:17800:8080
  #   volumes:
  #     - /opt/configs/laisky-blog-graphql:/etc/laisky-blog-graphql:ro
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #   environment:
  #     GOOGLE_APPLICATION_CREDENTIALS: "/etc/laisky-blog-graphql/gcp-general-sa.json"
  #     NO_PROXY: localhost,127.0.0.1,100.64.0.0/10,192.168.0.0/16,10.0.0.0/8,127.0.0.0/8,snake-carp.ts.net
  #     HTTP_PROXY: http://100.97.108.34:17777
  #     HTTPS_PROXY: http://100.97.108.34:17777
  #   command: api --listen=0.0.0.0:8080
  #     --config=/etc/laisky-blog-graphql/settings.yml
  #     --log-level=debug
  #     # -t telegram

  go-ramjet:
    image: ppcelery/go-ramjet:latest
    restart: "always"
    # dns:
    #   - 100.122.41.16
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    environment:
      CHROMEDP_SEMA_LIMIT: 6
      http_proxy: http://100.97.189.32:17777
      https_proxy: http://100.97.189.32:17777
      HTTP_PROXY: http://100.97.189.32:17777
      HTTPS_PROXY: http://100.97.189.32:17777
      NO_PROXY: localhost,127.0.0.1,100.64.0.0/10,192.168.0.0/16,10.0.0.0/8,127.0.0.0/8,snake-carp.ts.net,basebit.me
    volumes:
      - /opt/configs/go-ramjet/settings.yml:/etc/go-ramjet/settings.yml:ro
    command: -t heartbeat,ssl-monitor,rss,keyword,gptchat -c /etc/go-ramjet/settings.yml --debug

  # ramjet:
  #   image: ppcelery/ramjet:latest
  #   restart: always
  #   deploy:
  #     replicas: 1
  #   ports:
  #     - 100.97.108.34:22280:37851
  #   dns:
  #     - 100.122.41.16
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "30m"
  #   volumes:
  #     - /opt/configs/ramjet/prd.py:/app/ramjet/settings/prd.py:ro
  #     # - /home/laisky/data/langchain/index:/var/lib/openai/index
  #     - /home/laisky/data/langchain/index-azure:/var/lib/openai/index
  #   environment:
  #     - http_proxy=http://100.97.189.32:17777
  #     - https_proxy=http://100.97.189.32:17777
  #     - HTTP_PROXY=http://100.97.189.32:17777
  #     - HTTPS_PROXY=http://100.97.189.32:17777
  #     - NO_PROXY=localhost,127.0.0.1,100.64.0.0/10,192.168.0.0/16,10.0.0.0/8,127.0.0.0/8,snake-carp.ts.net,basebit.me
  #   command: python -m ramjet -t gptchat --debug

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "30m"
  #   # dns:
  #   #   - 100.122.41.16
  #   ports:
  #     - 100.97.108.34:9200:9200
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #     - http.port=9200
  #     - http.max_content_length=10MB
  #     - http.cors.enabled=true
  #     - http.cors.allow-origin="*"
  #     - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
  #     - http.cors.allow-credentials=true
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - /var/lib/elasticsearch:/usr/share/elasticsearch/data

  # nginx:
  #   image: nginx:1.21.3-alpine
  #   restart: always
  #   ports:
  #     - 100.97.108.34:22280:80
  #   dns:
  #     - 100.122.41.16
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "30m"
  #   volumes:
  #     - /var/log:/var/log
  #     - /opt/configs/nginx/conf.d/home:/etc/nginx/conf.d:ro

  # registry:
  #   image: registry:2
  #   restart: "always"
  #   dns:
  #     - 8.8.8.8
  #     - 1.1.1.1
  #   ports:
  #     - 100.97.108.34:443:443
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #   environment:
  #     - REGISTRY_HTTP_ADDR=0.0.0.0:443
  #     - REGISTRY_HTTP_TLS_CERTIFICATE=/certs/ca.crt
  #     - REGISTRY_HTTP_TLS_KEY=/certs/ca.key
  #   volumes:
  #     - /etc/kubernetes/pki/registry:/certs:ro
  #     - /var/lib/registry

  minio:
    image: minio/minio:latest
    restart: unless-stopped
    env_file:
      - /opt/configs/env/home/minio.env
    ports:
      - 100.97.108.34:19000:9000
      - 100.97.108.34:19001:9001
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    # dns:
    #   - 100.122.41.16
    volumes:
      - /var/lib/minio:/data
    command: server /data --address :9000 --console-address ":9001"

  glider:
    image: ppcelery/glider:latest
    restart: unless-stopped
    # dns:
    #   - 100.122.41.16
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
      - 100.97.108.34:17778:8080
    volumes:
      - /opt/configs/glider/home/glider.conf:/app/glider.conf:ro

  glider-gfw:
    image: ppcelery/glider:latest
    restart: unless-stopped
    # dns:
    #   - 100.122.41.16
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    network_mode: host
    # ports:
    #   - 100.97.108.34:17777:8080
    #   - 100.97.108.34:17778:8080
    volumes:
      - /opt/configs/glider/home/glider-gfw.conf:/app/glider.conf:ro

  monitor:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 100.97.108.34:9100:9100

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   restart: unless-stopped
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--web.enable-lifecycle'
  #   ports:
  #     - 100.97.108.34:9090:9090

  hysteria:
    # image: teddysun/hysteria
    image: tobyxdd/hysteria
    restart: "always"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    # dns:
    #   - 100.122.41.16
    ports:
      - 100.97.108.34:28998:8998
    volumes:
      - /opt/configs/hysteria/b1:/etc/hysteria:ro
    command: ["client", "-c", "/etc/hysteria/client.yaml"]

  pdf:
    image: frooodle/s-pdf:latest
    restart: "always"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
      - '100.97.108.34:22082:8080'
    volumes:
      - /var/lib/stirling-pdf/trainingData:/usr/share/tessdata #Required for extra OCR languages
      - /opt/configs/stirling-pdf:/configs
      - /var/lib/stirling-pdf/customFiles:/customFiles/
      - /var/lib/stirling-pdf/logs:/logs/
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - INSTALL_BOOK_AND_ADVANCED_HTML_OPS=false

  # proxy_bbt:
  #   image: ppcelery/tinyproxy:latest
  #   restart: unless-stopped
  #   # dns:
  #   #   - 8.8.8.8
  #   #   - 1.1.1.1
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #   environment:
  #     - 'ALLOWED_NETWORKS=0.0.0.0/0'
  #   env_file:
  #     - /opt/configs/tinyproxy/auth.env
  #   ports:
  #     - 100.97.108.34:23491:8888

  metube:
    image: ghcr.io/alexta69/metube
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
      - "100.97.108.34:22081:8081"
    volumes:
      - /var/lib/ytdownload:/downloads
    environment:
      DELETE_FILE_ON_TRASHCAN: true
      http_proxy: http://100.97.189.32:17777
      https_proxy: http://100.97.189.32:17777
      HTTP_PROXY: http://100.97.189.32:17777
      HTTPS_PROXY: http://100.97.189.32:17777
      NO_PROXY: localhost,127.0.0.1,100.64.0.0/10,192.168.0.0/16,10.0.0.0/8,127.0.0.0/8,snake-carp.ts.net,basebit.me

  greptime:
    image: greptime/greptimedb:v0.11.2
    restart: "unless-stopped"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
      - "100.97.108.34:14000:4000"
      - "100.97.108.34:14001:4001"
      - "100.97.108.34:14002:4002"
      - "100.97.108.34:14003:4003"
    volumes:
      - ./var/lib/greptimedb:/tmp/greptimedb
    command: ["standalone", "start",
      "--http-addr", "0.0.0.0:4000",
      "--rpc-addr", "0.0.0.0:4001",
      "--mysql-addr", "0.0.0.0:4002",
      "--postgres-addr", "0.0.0.0:4003"
    ]

  grafana:
    image: grafana/grafana:11.4.0
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
      - "100.97.108.34:13000:3000"
    volumes:
      - /var/lib/grafana:/var/lib/grafana
      - /var/log/grafana:/var/log/grafana

  llmstorm:
    image: ppcelery/llm-storm:latest
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
      # HTTP POST /deep-research {"prompt": "PUT YOUT QUERY HERE"}
      # with HEADER "Authorization: Bearer YOUR_API_KEY"
      - "100.97.108.34:22083:8080"
    env_file:
      # set BING_SEARCH_API_KEY in env file
      - /opt/configs/env/home/storm.env
    environment:
      OPENAI_API_TYPE: openai
      OPENAI_MAX_TOKENS: 4000
      OPENAI_MODEL_NAME: o3-mini
      OPENAI_API_BASE: https://oneapi.laisky.com/v1/
      # (optional) set REDIS_HOST to activate the Redis-based async task worker
      REDIS_HOST: 100.122.41.16
      # (optional) co-storm tuning
      COSTORM_MAX_CONV_TURN: 5
      COSTORM_MAX_PERSPECTIVE: 5
      COSTORM_MAX_SEARCH_TOP_K: 5
      http_proxy: http://100.97.189.32:17777
      https_proxy: http://100.97.189.32:17777
      HTTP_PROXY: http://100.97.189.32:17777
      HTTPS_PROXY: http://100.97.189.32:17777
      NO_PROXY: localhost,127.0.0.1,100.64.0.0/10,192.168.0.0/16,10.0.0.0/8,127.0.0.0/8,snake-carp.ts.net,basebit.me

  # ario:
  #   image: ppcelery/ar-io-core:latest
  #   restart: unless-stopped
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #   ports:
  #     - "100.97.108.34:22084:4000"
  #   volumes:
  #     - /var/lib/ario:/app/data
  #   environment:
  #     http_proxy: http://100.97.189.32:17777
  #     https_proxy: http://100.97.189.32:17777
  #     HTTP_PROXY: http://100.97.189.32:17777
  #     HTTPS_PROXY: http://100.97.189.32:17777
  #     NO_PROXY: localhost,127.0.0.1,100.64.0.0/10,192.168.0.0/16,10.0.0.0/8,127.0.0.0/8,snake-carp.ts.net,basebit.me
